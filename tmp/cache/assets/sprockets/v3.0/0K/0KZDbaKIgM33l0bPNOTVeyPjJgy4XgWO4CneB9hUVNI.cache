I"~(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Gumtree || (window.Gumtree = {});

  Views.Gumtree = (function(superClass) {
    var INTERVAL, add_new_watcher, run_progress, set_event_submit_watcher, set_event_watcher_click, show_gumtree_items, show_gumtree_list;

    extend(Gumtree, superClass);

    INTERVAL = 30;

    function Gumtree() {
      Gumtree.__super__.constructor.apply(this, arguments);
    }

    Gumtree.prototype.show = function() {
      set_event_submit_watcher();
      return set_event_watcher_click();
    };

    set_event_watcher_click = function() {
      return $('#watchers').on('click', '.label', function() {
        var id, request;
        id = $(this).data('id');
        request = Models.Sync.removeGumtreeWatcher(id);
        return request.done(function(data) {
          return $("#watchers .label[data-id=" + id + "]").fadeOut();
        });
      });
    };

    set_event_submit_watcher = function() {
      return $("#save_watcher").on('click', function() {
        var request, watcher;
        watcher = $.trim($('input[name="watcher"]').val());
        if (!watcher) {
          return;
        }
        request = Models.Sync.saveGumtreeWatcher(watcher);
        return request.done(function(data) {
          return add_new_watcher(data);
        });
      });
    };

    show_gumtree_list = function() {
      return show_gumtree_items();
    };

    show_gumtree_items = function() {
      var $gumtree_list, response;
      $gumtree_list = $('#gumtree_list');
      $gumtree_list.html('Loading ...');
      response = Models.Sync.getGumtreeItems();
      return response.done(function(items) {
        var i, item, len, template;
        if (items.length) {
          $gumtree_list.html('');
          for (i = 0, len = items.length; i < len; i++) {
            item = items[i];
            template = $gumtree_list.attr('data-template');
            template = template.replace(new RegExp(/_header/g), item.title);
            template = template.replace(new RegExp(/_image_src/g), item.img);
            template = template.replace(new RegExp(/_description/g), item.description);
            template = template.replace(new RegExp(/_time/g), item.time);
            template = template.replace(new RegExp(/_area/g), item.area);
            template = template.replace(new RegExp(/_location/g), item.location);
            template = template.replace(new RegExp(/_link/g), item.link);
            $gumtree_list.append(template);
          }
        } else {
          $gumtree_list.html('No items.');
        }
        return run_progress();
      });
    };

    run_progress = function() {
      var $progress;
      clearInterval(window.progress_running);
      $progress = $('#progress');
      $progress.progress('reset');
      return window.progress_running = window.setInterval(function() {
        $progress.progress('increment', INTERVAL / 60);
        if ($progress.progress('is complete')) {
          clearInterval(window.progress_running);
          return show_gumtree_items();
        }
      }, 1000);
    };

    add_new_watcher = function(data) {
      var $watcher;
      $watcher = $("<div class='ui teal tag label' data-id='" + data.id + "'>" + data.name + "</div>");
      $watcher.hide();
      $("#watchers").append($watcher);
      return $watcher.fadeIn();
    };

    return Gumtree;

  })(Views.ApplicationView);

}).call(this);
:ET